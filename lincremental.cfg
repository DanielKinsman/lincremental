#lincremental backup configuration
#---------------------------------

#system commands used by lincremental
ECHO=/bin/echo
TOUCH=/usr/bin/touch
CP=/bin/cp
MV=/bin/mv
RM=/bin/rm
MKDIR=/bin/mkdir
RSYNC=/usr/bin/rsync
TAR=/bin/tar
CAT=/bin/cat
KILL=/bin/kill
CUT=/usr/bin/cut
GREP=/bin/grep
DATE=/bin/date
GLACIER=/usr/local/bin/glacier-cmd
GPG=/usr/bin/gpg
RENICE=/usr/bin/renice

#the directory to backup (needs trailing slash)
SRC="/tmp/backuptest/original/" #use "/home/.ecryptfs/" if you encrypt your home directories

#the base directory to store backups in for this machine
TRGBASE="/tmp/backuptest/backup"

#File containing a pattern of files to exclude from backups
EXCLUDES="$TRGBASE/excludes"

#Number of hourly backups to keep (recommend 4-24)
NUM_HOURLY=12

#Number of daily backups to keep (recommend 7-14)
NUM_DAILY=7

#Number of weekly backups to keep (recommend 2-6)
NUM_WEEKLY=2

#Number of monthly backups to keep (recommend 12-24)
NUM_MONTHLY=12

#Default rsync options:
OPT="-avh --delete --delete-excluded --exclude-from=$EXCLUDES"

#Lockfile prefix
LOCK_DIR="/tmp/backuptest/lock/"

#Make lincremental processes use less cpu using nice/renice
NICE_ADJUST=10

#Network configuration for copying all existing backup sets (hourly, daily, weekly and monthy) to
#another machine running via ssh or a rsync daemon
#------------------------------------------------------------------------------------------------

#The target to send backups to
NETWORK_TRG=""
#Examples:
#   NETWORK_TRG="user@server::backupdir" for rysnc daemon (warning: unencrypted traffic)
#   NETWORK_TRG="user@server:backupdir" for rysnc over ssh

NETWORK_AUTH_OPT=""
#Examples:
#   NETWORK_AUTH_OPT="--password-file=/etc/lincremental/rsyncnetworkpassword" for rysnc daemon (warning: unencrypted traffic)
#   NETWORK_AUTH_OPT="-e \"ssh -i /etc/lincremental/sshkey\"" for rysnc over ssh

#The network rsync options
NETWORK_OPT="-avh --delete --hard-links $NETWORK_AUTH_OPT"

#Configuration for copying all existing backup sets (hourly, daily, weekly and monthly) to
#an amazon glacier account incrementally
#-----------------------------------------------------------------------------------------

#Note you must have installed and configured glacier-cmd appropriately
#(with region, aws access and secret keys etc) and have pre-created a
#vault for this to work.

#Set to "yes" to enable aws glacier uploads
#Use at your own risk, I am not liable or responsible for usage charges incurred from amazon.
AWS_ENABLE="no"

#The local directory to store files that will be uploaded to glacier
AWS_UPLOAD_DIR="/tmp/backuptest/glacier"

#The tar options for creating files to send to aws.
#Note: don't use tar compression if the files you are backing up are already encrypted (e.g. ecryptfs)
TAR_OPT="-cvf"

#The gpg key used to encrypt backup files before sending to aws
#(leave blank to skip encryption)
GPG_PUBLIC_KEY=""

#The aws vault to use
AWS_VAULT="test"

#The number of days to wait before creating a new backup to glacier
AWS_DAYS_BETWEEN_UPLOADS=28